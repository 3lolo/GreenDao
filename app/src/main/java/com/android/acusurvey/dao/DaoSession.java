package com.android.acusurvey.dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.android.acusurvey.dao.Surveys;
import com.android.acusurvey.dao.SurveyU;
import com.android.acusurvey.dao.Group;
import com.android.acusurvey.dao.Question;
import com.android.acusurvey.dao.User;
import com.android.acusurvey.dao.Answers;
import com.android.acusurvey.dao.AnswersU;
import com.android.acusurvey.dao.AnswersP;

import com.android.acusurvey.dao.SurveysDao;
import com.android.acusurvey.dao.SurveyUDao;
import com.android.acusurvey.dao.GroupDao;
import com.android.acusurvey.dao.QuestionDao;
import com.android.acusurvey.dao.UserDao;
import com.android.acusurvey.dao.AnswersDao;
import com.android.acusurvey.dao.AnswersUDao;
import com.android.acusurvey.dao.AnswersPDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig surveysDaoConfig;
    private final DaoConfig surveyUDaoConfig;
    private final DaoConfig groupDaoConfig;
    private final DaoConfig questionDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig answersDaoConfig;
    private final DaoConfig answersUDaoConfig;
    private final DaoConfig answersPDaoConfig;

    private final SurveysDao surveysDao;
    private final SurveyUDao surveyUDao;
    private final GroupDao groupDao;
    private final QuestionDao questionDao;
    private final UserDao userDao;
    private final AnswersDao answersDao;
    private final AnswersUDao answersUDao;
    private final AnswersPDao answersPDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        surveysDaoConfig = daoConfigMap.get(SurveysDao.class).clone();
        surveysDaoConfig.initIdentityScope(type);

        surveyUDaoConfig = daoConfigMap.get(SurveyUDao.class).clone();
        surveyUDaoConfig.initIdentityScope(type);

        groupDaoConfig = daoConfigMap.get(GroupDao.class).clone();
        groupDaoConfig.initIdentityScope(type);

        questionDaoConfig = daoConfigMap.get(QuestionDao.class).clone();
        questionDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        answersDaoConfig = daoConfigMap.get(AnswersDao.class).clone();
        answersDaoConfig.initIdentityScope(type);

        answersUDaoConfig = daoConfigMap.get(AnswersUDao.class).clone();
        answersUDaoConfig.initIdentityScope(type);

        answersPDaoConfig = daoConfigMap.get(AnswersPDao.class).clone();
        answersPDaoConfig.initIdentityScope(type);

        surveysDao = new SurveysDao(surveysDaoConfig, this);
        surveyUDao = new SurveyUDao(surveyUDaoConfig, this);
        groupDao = new GroupDao(groupDaoConfig, this);
        questionDao = new QuestionDao(questionDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        answersDao = new AnswersDao(answersDaoConfig, this);
        answersUDao = new AnswersUDao(answersUDaoConfig, this);
        answersPDao = new AnswersPDao(answersPDaoConfig, this);

        registerDao(Surveys.class, surveysDao);
        registerDao(SurveyU.class, surveyUDao);
        registerDao(Group.class, groupDao);
        registerDao(Question.class, questionDao);
        registerDao(User.class, userDao);
        registerDao(Answers.class, answersDao);
        registerDao(AnswersU.class, answersUDao);
        registerDao(AnswersP.class, answersPDao);
    }
    
    public void clear() {
        surveysDaoConfig.getIdentityScope().clear();
        surveyUDaoConfig.getIdentityScope().clear();
        groupDaoConfig.getIdentityScope().clear();
        questionDaoConfig.getIdentityScope().clear();
        userDaoConfig.getIdentityScope().clear();
        answersDaoConfig.getIdentityScope().clear();
        answersUDaoConfig.getIdentityScope().clear();
        answersPDaoConfig.getIdentityScope().clear();
    }

    public SurveysDao getSurveysDao() {
        return surveysDao;
    }

    public SurveyUDao getSurveyUDao() {
        return surveyUDao;
    }

    public GroupDao getGroupDao() {
        return groupDao;
    }

    public QuestionDao getQuestionDao() {
        return questionDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public AnswersDao getAnswersDao() {
        return answersDao;
    }

    public AnswersUDao getAnswersUDao() {
        return answersUDao;
    }

    public AnswersPDao getAnswersPDao() {
        return answersPDao;
    }

}
